services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      kafka:
        condition: service_healthy
      restaurant-service:
        condition: service_started
      booking-service:
        condition: service_started
    environment:
      - RESTAURANT_SERVICE=restaurant-service:50051
      - BOOKING_SERVICE=booking-service:50052
      - KAFKA_BROKER=kafka:9092

  restaurant-service:
    build:
      context: ./restaurant-service
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://mongodb:27017/restaurants_db
      - KAFKA_BROKER=kafka:9092
      - KAFKAJS_NO_PARTITIONER_WARNING=1

  booking-service:
    build:
      context: ./booking-service
      dockerfile: Dockerfile
    ports:
      - "50052:50052"
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://mongodb:27017/bookings_db
      - KAFKA_BROKER=kafka:9092
      - KAFKAJS_NO_PARTITIONER_WARNING=1

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 10s
      retries: 10

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 5s
      timeout: 10s
      retries: 10

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 5s
      timeout: 20s
      retries: 30

networks:
  default:
    driver: bridge

volumes:
  mongodb_data: